// Code generated by entc, DO NOT EDIT.

package migrate

import (
	"github.com/facebookincubator/ent/dialect/sql/schema"
	"github.com/facebookincubator/ent/schema/field"
)

var (
	// CompaniesColumns holds the columns for the "companies" table.
	CompaniesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "company_name", Type: field.TypeString},
	}
	// CompaniesTable holds the schema information for the "companies" table.
	CompaniesTable = &schema.Table{
		Name:        "companies",
		Columns:     CompaniesColumns,
		PrimaryKey:  []*schema.Column{CompaniesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// EquipmentColumns holds the columns for the "equipment" table.
	EquipmentColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "equipment_name", Type: field.TypeString},
		{Name: "equipment_price", Type: field.TypeInt},
	}
	// EquipmentTable holds the schema information for the "equipment" table.
	EquipmentTable = &schema.Table{
		Name:        "equipment",
		Columns:     EquipmentColumns,
		PrimaryKey:  []*schema.Column{EquipmentColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// OrdersColumns holds the columns for the "orders" table.
	OrdersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "amount", Type: field.TypeInt},
		{Name: "price", Type: field.TypeInt},
		{Name: "added_time", Type: field.TypeTime},
		{Name: "company_order_companyy", Type: field.TypeInt, Nullable: true},
		{Name: "equipment_order_equipmentt", Type: field.TypeInt, Nullable: true},
		{Name: "user_order_userr", Type: field.TypeInt, Nullable: true},
	}
	// OrdersTable holds the schema information for the "orders" table.
	OrdersTable = &schema.Table{
		Name:       "orders",
		Columns:    OrdersColumns,
		PrimaryKey: []*schema.Column{OrdersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "orders_companies_order_companyy",
				Columns: []*schema.Column{OrdersColumns[4]},

				RefColumns: []*schema.Column{CompaniesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "orders_equipment_order_equipmentt",
				Columns: []*schema.Column{OrdersColumns[5]},

				RefColumns: []*schema.Column{EquipmentColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "orders_users_order_userr",
				Columns: []*schema.Column{OrdersColumns[6]},

				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "user_email", Type: field.TypeString, Unique: true},
		{Name: "user_password", Type: field.TypeString},
		{Name: "user_name", Type: field.TypeString},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:        "users",
		Columns:     UsersColumns,
		PrimaryKey:  []*schema.Column{UsersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		CompaniesTable,
		EquipmentTable,
		OrdersTable,
		UsersTable,
	}
)

func init() {
	OrdersTable.ForeignKeys[0].RefTable = CompaniesTable
	OrdersTable.ForeignKeys[1].RefTable = EquipmentTable
	OrdersTable.ForeignKeys[2].RefTable = UsersTable
}
